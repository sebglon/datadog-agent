name: "Windows unit tests"

on: [push]

jobs:
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout datadog-agent repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 #needed for 'git describe' to work

      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8.10'

      - name: Install ruby # This also installs the msys compiler we need for cgo
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: mswin

      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16.7'

      - name: Set up runner
        run: |
          $ErrorActionPreference = 'Stop';
          # install dependencies
          python -m pip install codecov -r requirements.txt
          inv -e install-tools
          inv -e deps

          # create 'ddagentuser' user to test the secrets feature on windows
          $Password = ConvertTo-SecureString "dummyPW_:-gch6Rejae9" -AsPlainText -Force;
          New-LocalUser -Name "ddagentuser" -Description "Test user for the secrets feature on windows." -Password $Password

      - name: Run tests
        run: |
          $Env:path += ";C:\msys64\mingw64\bin;C:\msys64\usr\bin\"
          $ErrorActionPreference = 'Stop';
          inv -e rtloader.make
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
          inv -e rtloader.format --raise-if-changed
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
          inv -e rtloader.install
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
          #inv -e rtloader.test
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
          inv -e test --rerun-fails=2 --python-runtimes 3 --coverage --profile --fail-on-fmt --python-home-3=$Env:pythonLocation
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
          codecov -f profile.cov -F windows
          If ($lastExitCode -ne "0") { throw "Previous command returned $lastExitCode" }
